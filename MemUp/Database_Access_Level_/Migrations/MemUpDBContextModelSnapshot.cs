// <auto-generated />
using System;
using Database_Access_Level;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Database_Access_Level.Migrations
{
    [DbContext(typeof(MemUpDBContext))]
    partial class MemUpDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Database_Access_Level.Collection", b =>
                {
                    b.Property<int>("CollectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("collection_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CollectionId"));

                    b.Property<string>("CollectionName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("collection_name");

                    b.Property<int>("DailyLimit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("daily_limit")
                        .HasDefaultValueSql("10");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("CollectionId");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "CollectionName" }, "collections_collection_name_key")
                        .IsUnique();

                    b.ToTable("collections", (string)null);
                });

            modelBuilder.Entity("Database_Access_Level.Mem", b =>
                {
                    b.Property<int>("MemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("mem_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MemId"));

                    b.Property<string>("AdditionalInfo")
                        .HasColumnType("text")
                        .HasColumnName("additional_info");

                    b.Property<string>("AnswerText")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("answer_text");

                    b.Property<int>("CollectionId")
                        .HasColumnType("integer")
                        .HasColumnName("collection_id");

                    b.Property<string>("ImagePath")
                        .HasColumnType("text")
                        .HasColumnName("image_path");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("question_text");

                    b.Property<DateTime?>("ReviewTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("review_time");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("MemId");

                    b.HasIndex("CollectionId");

                    b.HasIndex("UserId");

                    b.ToTable("mems", (string)null);
                });

            modelBuilder.Entity("Database_Access_Level.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<int>("DayStreak")
                        .HasColumnType("integer")
                        .HasColumnName("day_streak");

                    b.Property<bool?>("MessagesStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasColumnName("messages_status")
                        .HasDefaultValueSql("true");

                    b.Property<int>("MpBalance")
                        .HasColumnType("integer")
                        .HasColumnName("mp_balance");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("user_name");

                    b.HasKey("UserId");

                    b.HasIndex(new[] { "UserName" }, "users_user_name_key")
                        .IsUnique();

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("Database_Access_Level.Collection", b =>
                {
                    b.HasOne("Database_Access_Level.User", "User")
                        .WithMany("Collections")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("collection_owner");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Database_Access_Level.Mem", b =>
                {
                    b.HasOne("Database_Access_Level.Collection", "Collection")
                        .WithMany("Mems")
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("parent_collection");

                    b.HasOne("Database_Access_Level.User", "User")
                        .WithMany("Mems")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("user_profile");

                    b.Navigation("Collection");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Database_Access_Level.Collection", b =>
                {
                    b.Navigation("Mems");
                });

            modelBuilder.Entity("Database_Access_Level.User", b =>
                {
                    b.Navigation("Collections");

                    b.Navigation("Mems");
                });
#pragma warning restore 612, 618
        }
    }
}
